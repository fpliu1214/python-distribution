name: publish python-distribution

on:
  workflow_dispatch:
    inputs:
      python-edition:
        description: choose a python edition
        type: choice
        options:
          - '3.13'
          - '3.12'
          - '3.11'
          - '3.10'
          - '3.9'

jobs:

  check:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - id:  check-if-build
        run: |
          RELEASE_VERSION="$(./build.sh python-version ${{ github.event.inputs.python-edition }})"

          printf 'RELEASE_VERSION=%s\n' "$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

    outputs:
      release-version: ${{ steps.check-if-build.outputs.RELEASE_VERSION }}


  linux-loongarch64:
    needs: check
    if: needs.check.outputs.if-new-release == 'yes'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - run: curl -LO https://raw.githubusercontent.com/alpinelinux/alpine-chroot-install/master/alpine-chroot-install
      - run: chmod +x alpine-chroot-install
      - run: sudo ./alpine-chroot-install -d /alpine -a loongarch64
      - run: /alpine/enter-chroot /bin/sh pack.sh ${{ needs.check.outputs.release-version }} linux-any-loongarch64

      - uses: actions/upload-artifact@v4
        with:
          name: python-${{ needs.check.outputs.release-version }}-linux-any-loongarch64.tar.xz
          path: python-${{ needs.check.outputs.release-version }}-linux-any-loongarch64.tar.xz



  publish:
    needs: [linux-loongarch64]
    if: needs.check.outputs.if-new-release == 'yes'

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls -a

      - run: |
          cat > notes.md <<EOF
          ## config

          \`\`\`yaml
          $(./build.sh config ${{ github.event.inputs.python-edition }})
          \`\`\`

          ## sha256sum

          \`\`\`
          $(sha256sum *.tar.xz)
          \`\`\`
          EOF

      - run: gh release create ${{ needs.check.outputs.release-version }} *.tar.xz --title ${{ needs.check.outputs.release-version }} --notes-file notes.md
